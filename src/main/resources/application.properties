spring.datasource.url=jdbc:mysql://127.0.0.1:3306/tokeys?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
#spring.datasource.username=starter2
#spring.datasource.password=starter2
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

beetlsql.ds.dataSource.basePackage=com
beetlsql.ds.dataSource.dbStyle=org.beetl.sql.core.db.MySqlStyle
#有一个数据源命名为dataSource
beetlsql.mutiple.datasource=dataSource

# 1，1 是管理员密码，相当于启动后就登录，方便测试，系统需要取消这俩个配置
user.id=1
user.orgId=1
#打开审计功能，开发模式应该关闭
audit.enable=false
#单机情况下使用hashmap存放回话，集群下可以参考springboot 使用redis
spring.session.store-type=HASH_MAP

spring.cache.type=ehcache
spring.cache.ehcache.config=classpath:ehcache.xml
#spring.cache.type=SIMPLE
logging.level.root=info
logging.level.org.springframework.web.servlet.mvc.method.annotation=warn
#logging.file = my.log
server.port=8888
#html视图交给beetl渲染
beetl.suffix=html
beetlsql.dataSource.dbStyle=org.beetl.sql.core.db.MySqlStyle
#beetlsql.basePackage=com.ibeetl,com.xxx.yourpackage
beetlsql.basePackage=com
app.name=智疗【就诊】
logging.pattern.console=%-4relative [%thread] %-5level %logger{256} %M %L - %msg%n
####spring.devtools.restart.exclude=static/**,templates/**
#文档预览服务的调用地址，参考https://gitee.com/kekingcn/file-online-preview 安装，没有如下配置无法使用预览功能
file.previewURL=http://localhost:8012/onlinePreview


#热部署生效=true
spring.devtools.restart.enabled:true
#设置重启的目录
spring.devtools.restart.additional-paths: src/main/java
#classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude:static/**,templates/**,WEB-INF/**

###########################消息队列####################################
#默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。 默认true
spring.activemq.in-memory=false

#true表示使用连接池
spring.activemq.pool.enabled=true

#连接池最大连接数
spring.activemq.pool.max-connections=100

spring.activemq.send-timeout=3000
#空闲的连接过期时间，默认为30秒

spring.activemq.pool.idle-timeout=30000
#强制的连接过期时间，与idleTimeout的区别在于：idleTimeout是在连接空闲一段时间失效，
#而expiryTimeout不管当前连接的情况，只要达到指定时间就失效。默认为0，never

#spring.activemq.pool.create-connection-on-startup=true

#logging.level.root = debug
#debug=true